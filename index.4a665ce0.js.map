{"mappings":"ACEA,IAAM,EAAQ,SAAS,aAAa,CAAC,UAC/B,EAAS,SAAS,aAAa,CAAC,eAChC,EAAS,SAAS,aAAa,CAAC,eAChC,EAAY,SAAS,aAAa,CAAC,kBACnC,EAAY,SAAS,aAAa,CAAC,kBACnC,EAAW,EAAM,IAAI,CAAC,EAAE,CAE9B,SAAS,IACP,EAAO,QAAQ,CAAG,CAAC,IACnB,EAAO,QAAQ,CAAG,CAAC,IACnB,EAAU,QAAQ,CAAG,CAAC,IACtB,EAAU,QAAQ,CAAG,CAAC,GACxB,CAEA,SAAS,IACP,OAAO,EAAM,IAAI,CAAC,MAAM,CAAG,EAC7B,CAEA,SAAS,IACP,OAAO,EAAM,IAAI,CAAC,MAAM,CAAG,CAC7B,CAEA,SAAS,IACP,OAAO,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAG,EACtC,CAEA,SAAS,IACP,OAAO,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAG,CACtC,CAEA,EAAO,gBAAgB,CAAC,QAAS,WAC/B,GAAI,IAAa,CAGf,IAAK,IAFC,EAAM,EAAM,SAAS,GAElB,EAAI,EAAG,EAAI,EAAS,KAAK,CAAC,MAAM,CAAE,IACzC,EAAI,UAAU,CAAC,GAEjB,GACF,CACF,GAEA,EAAO,gBAAgB,CAAC,QAAS,WAC3B,MACF,EAAM,SAAS,CAAC,EAAM,IAAI,CAAC,MAAM,CAAG,GACpC,IAEJ,GAEA,EAAU,gBAAgB,CAAC,QAAS,WAClC,GAAI,IAAgB,CAClB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,IAAI,CAAC,MAAM,CAAE,IACrC,EAAM,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAE3B,GACF,CACF,GAEA,EAAU,gBAAgB,CAAC,QAAS,WAClC,GAAI,IAAgB,CAClB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,IAAI,CAAC,MAAM,CAAE,IACrC,EAAM,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAE3B,GACF,CACF,GAEA","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar table = document.querySelector(\".field\");\nvar addRow = document.querySelector(\".append-row\");\nvar remRow = document.querySelector(\".remove-row\");\nvar addColumn = document.querySelector(\".append-column\");\nvar remColumn = document.querySelector(\".remove-column\");\nvar firstRow = table.rows[0];\nfunction updateButtonState() {\n    addRow.disabled = !canAddRow();\n    remRow.disabled = !canRemRow();\n    addColumn.disabled = !canAddColumn();\n    remColumn.disabled = !canRemColumn();\n}\nfunction canAddRow() {\n    return table.rows.length < 10;\n}\nfunction canRemRow() {\n    return table.rows.length > 2;\n}\nfunction canAddColumn() {\n    return table.rows[0].cells.length < 10;\n}\nfunction canRemColumn() {\n    return table.rows[0].cells.length > 2;\n}\naddRow.addEventListener(\"click\", function() {\n    if (canAddRow()) {\n        var row = table.insertRow();\n        for(var i = 0; i < firstRow.cells.length; i++)row.insertCell(i);\n        updateButtonState();\n    }\n});\nremRow.addEventListener(\"click\", function() {\n    if (canRemRow()) {\n        table.deleteRow(table.rows.length - 1);\n        updateButtonState();\n    }\n});\naddColumn.addEventListener(\"click\", function() {\n    if (canAddColumn()) {\n        for(var i = 0; i < table.rows.length; i++)table.rows[i].insertCell(-1);\n        updateButtonState();\n    }\n});\nremColumn.addEventListener(\"click\", function() {\n    if (canRemColumn()) {\n        for(var i = 0; i < table.rows.length; i++)table.rows[i].deleteCell(-1);\n        updateButtonState();\n    }\n});\nupdateButtonState();\n\n//# sourceMappingURL=index.4a665ce0.js.map\n","'use strict';\n\nconst table = document.querySelector('.field');\nconst addRow = document.querySelector('.append-row');\nconst remRow = document.querySelector('.remove-row');\nconst addColumn = document.querySelector('.append-column');\nconst remColumn = document.querySelector('.remove-column');\nconst firstRow = table.rows[0];\n\nfunction updateButtonState() {\n  addRow.disabled = !canAddRow();\n  remRow.disabled = !canRemRow();\n  addColumn.disabled = !canAddColumn();\n  remColumn.disabled = !canRemColumn();\n}\n\nfunction canAddRow() {\n  return table.rows.length < 10;\n}\n\nfunction canRemRow() {\n  return table.rows.length > 2;\n}\n\nfunction canAddColumn() {\n  return table.rows[0].cells.length < 10;\n}\n\nfunction canRemColumn() {\n  return table.rows[0].cells.length > 2;\n}\n\naddRow.addEventListener('click', () => {\n  if (canAddRow()) {\n    const row = table.insertRow();\n\n    for (let i = 0; i < firstRow.cells.length; i++) {\n      row.insertCell(i);\n    }\n    updateButtonState();\n  }\n});\n\nremRow.addEventListener('click', () => {\n  if (canRemRow()) {\n    table.deleteRow(table.rows.length - 1);\n    updateButtonState();\n  }\n});\n\naddColumn.addEventListener('click', () => {\n  if (canAddColumn()) {\n    for (let i = 0; i < table.rows.length; i++) {\n      table.rows[i].insertCell(-1);\n    }\n    updateButtonState();\n  }\n});\n\nremColumn.addEventListener('click', () => {\n  if (canRemColumn()) {\n    for (let i = 0; i < table.rows.length; i++) {\n      table.rows[i].deleteCell(-1);\n    }\n    updateButtonState();\n  }\n});\n\nupdateButtonState();\n"],"names":["table","document","querySelector","addRow","remRow","addColumn","remColumn","firstRow","rows","updateButtonState","disabled","canAddRow","canRemRow","canAddColumn","canRemColumn","length","cells","addEventListener","row","insertRow","i","insertCell","deleteRow","deleteCell"],"version":3,"file":"index.4a665ce0.js.map"}